// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Anime {
  id             Int             @id // animetheme api's anime id
  anilistId      Int?
  myanimelistId  Int?
  kitsuId        Int?
  anidbId        Int?
  title          String
  animeThemes    AnimeTheme[]
  streamingSongs StreamingSong[]
}

model AnimeTheme {
  id             Int                @id // animetheme api's song id
  title          String
  slug           String
  artists        AnimeThemeArtist[]
  streamingSongs StreamingSong[]
  animeId        Int
  anime          Anime              @relation(fields: [animeId], references: [id])
}

model StreamingSong {
  id       Int    @id @default(autoincrement())
  provider String

  uri              String
  name             String
  openLink         String
  previewUrl       String
  image            String
  durationMs       Int
  artists          StreamingArtist[]
  availableMarkets AvailableMarket[]

  songType   String?
  addedTimes Int     @default(0)

  anime       Anime[]
  animeThemes AnimeTheme[]

  @@unique([provider, uri]) // Composite unique constraint
}

model AnimeThemeArtist {
  id          Int          @id
  name        String
  animeThemes AnimeTheme[]
}

model StreamingArtist {
  id            Int             @id
  name          String
  streamingSong StreamingSong[]
}

model AvailableMarket {
  id             Int             @id @default(autoincrement())
  name           String
  streamingSongs StreamingSong[]
}
