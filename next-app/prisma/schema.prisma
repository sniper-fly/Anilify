// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Anime {
  id            Int          @id // animetheme api's anime id
  anilistId     Int?
  myanimelistId Int?
  kitsuId       Int?
  anidbId       Int?
  title         String
  animeThemes   AnimeTheme[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  aniPlSongs    AniPlSong[]

  @@index([anilistId, myanimelistId, kitsuId, anidbId, createdAt, updatedAt])
}

model AnimeTheme {
  id        Int                @id // animetheme api's song id
  title     String
  slug      String
  artists   AnimeThemeArtist[]
  animeId   Int
  anime     Anime              @relation(fields: [animeId], references: [id])
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt

  @@index([createdAt, updatedAt])
}

model AnimeThemeArtist {
  id          Int          @id
  name        String
  animeThemes AnimeTheme[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model AniPlSong {
  id            Int             @id
  type          String
  title         String
  anime         Anime[]
  appleMusicUrl AppleMusicUrl[]
  spotifyTrack  SpotifyTrack[]
  spotifyAlbum  SpotifyAlbum[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  songNumId     String?
  seasonInfo    String?
  aniPlAnimeId  Int
  aniPlAnime    AniPlAnime      @relation(fields: [aniPlAnimeId], references: [id])
}

model AniPlAnime {
  id          Int               @id @default(autoincrement())
  title       String            @unique // メインのタイトルはuniqueと仮定する
  // ex)APでは前編後編分かれていて、MALで分かれていない場合, uniqueじゃなくなる可能性がある
  // AniPlAnimeTitleが複数のMALに一致する場合は、M:M関係になる可能性がある
  // → MALのTitleに重複が無いか調べる
  malId       Int
  mal         MyAnimeList       @relation(fields: [malId], references: [id])
  aniPlSong   AniPlSong[]
  otherTitles AniPlAnimeTitle[]
}

model AniPlAnimeTitle {
  id           Int        @id @default(autoincrement())
  title        String     @unique
  aniPlanimeId Int
  aniPlAnime   AniPlAnime @relation(fields: [aniPlanimeId], references: [id])
}

model AppleMusicUrl {
  id          Int       @id @default(autoincrement())
  url         String
  aniPlSongId Int       @unique
  aniPlSong   AniPlSong @relation(fields: [aniPlSongId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model SpotifyTrack {
  id               String          @id @db.VarChar(25) // uri
  name             String          @db.VarChar(300)
  previewUrl       String?
  image            String
  durationMs       Int
  isrc             String?
  artists          SpotifyArtist[]
  albums           SpotifyAlbum[]
  availableMarkets CountryCode[]
  // addedTimes       Int               @default(0)
  aniPlSongId      Int
  aniPlSong        AniPlSong?      @relation(fields: [aniPlSongId], references: [id])
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model SpotifyAlbum {
  id          String          @id @db.VarChar(25) // uri
  name        String
  artists     SpotifyArtist[]
  tracks      SpotifyTrack[]
  aniPlSongId Int             @unique
  aniPlSong   AniPlSong       @relation(fields: [aniPlSongId], references: [id])
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  upc         String? // universal product code
}

model SpotifyArtist {
  id        String         @id // spotify uri
  name      String
  tracks    SpotifyTrack[]
  albums    SpotifyAlbum[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model CountryCode {
  code          String         @id @db.VarChar(3) // JP, US, UK などcountry codeをidとする
  spotifyTracks SpotifyTrack[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model MyAnimeList {
  id                Int                @id
  title             String
  alternativeTitles AlternativeTitle[]
  // ↓ mediumで保存 largeは末尾に1を足すだけ 1000/110531.jpg -> 1000/1105311.jpg
  picture           String?
  startDate         String?
  endDate           String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  aniPlAnime        AniPlAnime[]
}

model AlternativeTitle {
  id    Int         @id @default(autoincrement())
  type  String // synonyms, en, ja
  title String      @db.VarChar(300) // Attack on Titan: Final Season
  malId Int
  mal   MyAnimeList @relation(fields: [malId], references: [id])

  @@unique([malId, title])
}
